/*
 *      _               _          _
 *   __| |  __ _  _ __ | | __ ___ | |_   __ _  _ __
 *  / _` | / _` || '__|| |/ // __|| __| / _` || '__|
 * | (_| || (_| || |   |   < \__ \| |_ | (_| || |
 *  \__,_| \__,_||_|   |_|\_\|___/ \__| \__,_||_|
 *
 *  Darkstar/EPIC4 by Brian Weiss <brian@epicsol.org>
 *
 *  For use with EPIC4-1.1.2 and higher.
 *  See the 'README' file for general information.
 *  See the 'COPYRIGHT' file for licensing information.
 */

/*
 * Warn user if client doesn't meet specifications
 */
if (!epic() || V < 20011203)
{
	xecho -b
	xecho -b WARNING!
	xecho -b
	xecho -b This script was intended for use with EPIC4-1.1.2 and higher.
	xecho -b Your client, $J, does not meet this requirement.
	xecho -b Continue to use this script pack at your own risk.
	xecho -b
	xecho -b If you would like to obtain EPIC4, you can visit one of the
	xecho -b following sites.
	xecho -b
	xecho -b Official EPIC Homepage:     http://www.epicsol.org/
	xecho -b Official EPIC FTP site:     ftp://ftp.epicsol.org/
	xecho -b
	xecho -b Current versions of both Darkstar and EPIC4 can also be found
	xecho -b at the following URL.
	xecho -b
	xecho -b http://www.got.net/~brian/epic4/
	xecho -b

	^local pause $"Press any key to continue, or 'q' to quit. "

	if (pause == [q])
	{
		xecho -b Bye!
		xecho -b
		//quit
	}
}

/*
 * Make sure we're clean
 */
dump all
timer -del all

for array in ($getarrays())
{
	@ delarray($array)
}


/*
 * Important global variables
 */
assign DS.VERSION 0.2.2
assign DS.INTERNAL_VERSION 20020416

/* This will be incremented every time a change takes place to the core
   scripts (anything that requires /reload to update). */
assign DS.COMMIT_ID 28


/*
 * Find out where everything is and store it in the DS structure.
 */
if (getenv(DARKSTAR_HOME))
{
	@ DS.HOME = getenv(DARKSTAR_HOME)
}{
	/* Attempt to get the directory from $loadinfo() */
	@ DS.HOME = before(-1 / $word(1 $loadinfo()))
	if (fexist($DS.HOME/darkstar.irc) == -1)
	{
		^assign DS.HOME ~/darkstar
	}
}

if (getenv(DARKSTAR_USERDIR))
{
	@ DS.USER_DIR = getenv(DARKSTAR_USERDIR)
}{
	^assign DS.USER_DIR ~/.darkstar
}

if (getenv(DARKSTAR_RC))
{
	@ DS.RC = getenv(DARKSTAR_RC)
}{
	^assign DS.RC ~/.dsrc
}

eval assign DS.HELP_DIR $DS.HOME/help
eval assign DS.MODULE_DIR $DS.HOME/modules $DS.USER_DIR/modules
eval assign DS.STATUS_DIR $DS.HOME/status $DS.USER_DIR/status
eval assign DS.THEME_DIR $DS.HOME/themes $DS.USER_DIR/themes
eval assign DS.SAVE_DIR $DS.USER_DIR/save

if (fexist($DS.USER_DIR) == -1)
{
	xecho -b Creating user directory: $DS.USER_DIR
	@ mkdir($DS.USER_DIR)
	@ mkdir($DS.USER_DIR/modules)
	@ mkdir($DS.USER_DIR/status)
	@ mkdir($DS.USER_DIR/themes)
	@ mkdir($DS.USER_DIR/save)
}


/* 
 * Important /SET's
 * If you want to change these, it should be done via .dsrc
 */
eval set CLIENT_INFORMATION Darkstar $DS.VERSION
set -CONTINUED_LINE
set CONTROL_C_COLOR ON
set DISPLAY_PC_CHARACTERS 4
set HIGH_BIT_ESCAPE 0
set INDENT ON


/*
 * Change window name and level for the first window, if necessary.
 */
if (winnam(1) == [ircII])
{
        ^window ircII name - level none
}


/*
 * Load the core scripts.
 */
eval load $DS.HOME/core/functions.dsc
eval load $DS.HOME/core/commands.dsc
eval load $DS.HOME/core/config.dsc
eval load $DS.HOME/core/help.dsc
eval load $DS.HOME/core/save.dsc
eval load $DS.HOME/core/status.dsc

/* Default settings for the core scripts. */
config.add -b AUTO_LOAD_DEPENDENCIES 1
config.add    AUTO_LOAD_MODULES away channel keepnick misc names nickcomp tabkey window
config.add -b AUTO_LOAD_PROMPT 1
config.add    THEME darkstar
config.add -b VERBOSE_SAVE 0

format.add SET $G Current value of $1 is $2-
format.add SET_NOVALUE $G No value for $1 has been set


if (fexist($DS.SAVE_DIR/core.sav) != -1)
{
	^load $DS.SAVE_DIR/core.sav
}

eval load $DS.HOME/core/themes.dsc
eval load $DS.HOME/core/loader.dsc

if (fexist($DS.RC) != -1)
{
	eval ^load $DS.RC
}


if (fexist($DS.HOME/darkstar.irc) == -1)
{
	xecho -b WARNING! We were unable to detect our location.
	xecho -b You may need to set the DARKSTAR_HOME environment variable.
	xecho -b Please have a look at the README file for more information.
}


/* EOF */