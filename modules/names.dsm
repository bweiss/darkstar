#version 0.2.1
/* $Id$ */
/*
 * names.dsm - DarkStar/EPIC4 module to display who's on a channel
 *
 * Written by Brian Weiss
 * Copyright (c) 2002 Brian Weiss
 * See the 'COPYRIGHT' file for more information.
 *
 * This script uses serial numbers 0 and 428 for /on hooks.
 */

queue cleanup.names
{
	for alias in (names sc scan scann scano scanv)
	{
		^alias -$alias
	}
	^on 353 -"*"
	^on 366 -"*"
	^on #hook 428 -"CONFIG NAMES_COL *"
}

config.add NAMES_COL 6

format.add NAMES_FOOTER
format.add NAMES_HEADER $G Users on $1: \(total/$2 - ops/$3 normal/$4\)
format.add NAMES_LEFT $G
format.add NAMES_NONOP $chr(32)$[9]1
format.add NAMES_OP %c@%n$[9]1
format.add NAMES_RIGHT
format.add NAMES_VOICE %m+%n$[9]1


alias names scan
alias sc scan

alias scan (chan, void)
{
	@ names.showusers($chan)
}

alias scann (chan default "$C", void)
{
	@ names.showusers($chan n)
}

alias scano (chan default "$C", void)
{
	@ names.showusers($chan o)
}

alias scanv (chan default "$C", void)
{
	@ names.showusers($chan v)
}


alias names.parse (chan, nick, void)
{
	if (ischanop($nick $chan))
	{
		@ function_return = fparse(NAMES_OP $nick)
	}\
	else if (ischanvoice($nick $chan) == 1)
	{
		@ function_return = fparse(NAMES_VOICE $nick)
	}{
		@ function_return = fparse(NAMES_NONOP $nick)
	}
}

alias names.showusers (chan default "$C", mode default "*", void)
{
	if (match($chan $mychannels()))
	{
		^local users

		switch ($tolower($mode))
		{
			(n)
			{
				^local desc normal users
				@ users = nochops($chan)
			}
			(o)
			{
				^local desc channel operators
				@ users = chops($chan)
			}
			(v)
			{
				^local desc voiced users
				for nick in ($channel($chan))
				{
					if (mid(1 1 $nick) == [+])
					{
						@ push(users $rest(2 $nick))
					}
				}
			}
			(*) {@ :users = onchannel($chan)}
		}

		if (#users < 1)
		{
			xecho -b No $desc were found on $chan
			return 0
		}

		if (FORMAT[NAMES_HEADER]) {echo $fparse(NAMES_HEADER $chan $#onchannel($chan) $#chops($chan) $#nochops($chan))}

		^local tmp
		for cnt from 1 to $CONFIG.NAMES_COL
		{
			push tmp nick.$cnt
		}

		fe ($users) $tmp
		{
			^local line
			if (FORMAT[NAMES_LEFT])
			{
				@ :line = [\$fparse(NAMES_LEFT)]
			}

			for (@ :cnt = 1, nick[$cnt], @ cnt++)
			{
				eval push line \\\$names.parse\(\$chan \$nick[$cnt]\)
			}

			if (FORMAT[NAMES_RIGHT])
			{
				push line \$fparse(NAMES_RIGHT)
			}

			eval echo $line
		}

		if (FORMAT[NAMES_FOOTER]) {echo $fparse(NAMES_FOOTER $chan $#onchannel($chan) $#chops($chan) $#nochops($chan))}
	}

	return
}

on ^353 "*"
{
	^assign NAMES.CHAN $2
}

on ^366 "*"
{
	@ names.showusers($NAMES.CHAN)
	^assign -NAMES.CHAN
}

on #-hook 428 "CONFIG NAMES_COL *"
{
	if (!isnumber($CONFIG.NAMES_COL b10))
	{
		xecho -b Value must be an integer
		^assign CONFIG.NAMES_COL $2
		xecho -b Value of NAMES_COL set back to $2
	}
}


/* EOF */