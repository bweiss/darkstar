/*     _             _        _
 *  __| | __ _  _ _ | |__ ___| |_  __ _  _ _
 * / _` |/ _` || '_|| / /(_-<|  _|/ _` || '_|
 * \__,_|\__,_||_|  |_\_\/__/ \__|\__,_||_|
 *
 * NAMES.DSM - Module to display who's on a channel for Darkstar/EPIC4
 * Author: Brian Weiss <brian@epicsol.org> - 2001
 *
 * Last modified: 1/14/02 (bmw)
 *
 * This script uses serial number 0 for all /on hooks.
 */

queue cleanup.names
{
	for alias in (names sc scan scann scano scanv)
	{
		^alias -$alias
	}
}


format.add NAMES_FOOTER
format.add NAMES_HEADER $G Users on $1: \(total/$2 - ops/$3 normal/$4\)
format.add NAMES_OP %c@%n
format.add NAMES_VOICE %m+%n


alias names scan
alias sc scan

alias scan (chan, void)
{
	@ names.showusers($chan)
}

alias scann (chan default "$C", void)
{
	@ names.showusers($chan n)
}

alias scano (chan default "$C", void)
{
	@ names.showusers($chan o)
}

alias scanv (chan default "$C", void)
{
	@ names.showusers($chan v)
}


alias names.showusers (chan default "$C", mode default "*", void)
{
	if (match($chan $mychannels()))
	{
		^local desc,users

		switch ($tolower($mode))
		{
			(n)
			{
				^assign desc normal users
				@ users = nochops($chan)
			}
			(o)
			{
				^assign desc channel operators
				@ users = chops($chan)
			}
			(v)
			{
				^assign desc voiced users
				for nick in ($channel($chan))
				{
					if (mid(1 1 $nick) == [+])
					{
						@ push(users $rest(2 $nick))
					}
				}
			}
			(*) {@ users = onchannel($chan)}
		}

		/* If no users matching the request are found alert user and exit */
		if (#users < 1)
		{
			xecho -b No $desc were found on $chan
			return 0
		}

		if (FORMAT[NAMES_HEADER])
		{
			echo $fparse(NAMES_HEADER $chan $#onchannel($chan) $#chops($chan) $#nochops($chan))
		}

		fe ($users) n1 n2 n3 n4 n5 n6
		{
			xecho -b $names.getov($chan $n1)$[9]n1 $names.getov($chan $n2)$[9]n2 $names.getov($chan $n3)$[9]n3 $names.getov($chan $n4)$[9]n4 $names.getov($chan $n5)$[9]n5 $names.getov($chan $n6)$[9]n6
		}

		if (FORMAT[NAMES_FOOTER])
		{
			echo $fparse(NAMES_FOOTER $chan $#onchannel($chan) $#chops($chan) $#nochops($chan))
		}

		return 1
	}
	return 0
}


on ^353 "*"
{
	^assign NAMES.CHAN $2
}

on ^366 "*"
{
	@ names.showusers($NAMES.CHAN)
	^assign -NAMES.CHAN
}

alias names.getov (chan, nick, void)
{
	@ function_return = ischanop($nick $chan) ? fparse(NAMES_OP) : (ischanvoice($nick $chan) == 1 ? fparse(NAMES_VOICE) : [ ])
}


/* bmw '01 */