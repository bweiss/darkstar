/*     _             _        _
 *  __| | __ _  _ _ | |__ ___| |_  __ _  _ _
 * / _` |/ _` || '_|| / /(_-<|  _|/ _` || '_|
 * \__,_|\__,_||_|  |_\_\/__/ \__|\__,_||_|
 *
 * MISC.DSM - The 'miscellaneous stuff' module for Darkstar/EPIC4
 * Author: Brian Weiss <brian@epicsol.org> - 2001
 *
 * Last modified: 1/13/02 (bmw)
 *
 * This script uses serial numbers 0 and 424 for ALL /on hooks.
 */

queue cleanup.misc
{
	for alias in (chat colors dns disco m nslookup pingme q umode ver whois wi wii ww)
	{
		^alias -$alias
	}

	for hook in (301 $jot(310 314) $jot(317 320) ctcp ctcp_reply dcc_chat msg notice send_dcc_chat send_msg send_notice)
	{
		^on $hook -"*"
	}

	^on action -'% \$servernick() *'
	^on #connect 424 -"*"
	^on mode -'\$servernick() \$servernick() *' 
	^on send_ctcp -"PRIVMSG *"
	^on #timer 424 -"*"
	^on who -"* % % % % *"

	@ delarray(away_users)
}


config.add    DEFAULT_UMODES iw
config.add -b SHOW_AWAY_ONCE 1
config.add    SHOW_AWAY_ONCE_TIMEOUT 900

format.add ACTION_USER *> $1 $3-
format.add CTCP $G CTCP $3 from $1 to $2: $4-
format.add CTCP_REPLY $G CTCP $3 reply from $1: $4-
format.add DCC_CHAT [$Z] %W.%n$1%W[%cdcc%W]%n $2-
format.add MSG [$Z] %W.%n$1%W[%c$2%W]%n $3-
format.add NOTICE [$Z] -$1%c\(%n$2%c\)%n- $3-
format.add SEND_ACTION_USER * -> $1: $servernick() $2-
format.add SEND_CTCP $G Requesting a CTCP $3 from $2: $4-
format.add SEND_DCC_CHAT [$Z] %W.%ndcc%W[%n$1%W]%n $2-
format.add SEND_MSG [$Z] %W.%nmsg%W[%n$1%W]%n $2-
format.add SEND_NOTICE [$Z] %W.%nnotice%c[%n$1%c]%n $2-
format.add WHOIS_AWAY %c[**]%n away       %c:%n $1 - $2-
format.add WHOIS_CHANNELS %c[**]%n channels   %c:%n $3-
format.add WHOIS_FOOTER
format.add WHOIS_HEADER
format.add WHOIS_IDENTIFIED %c[**]%n identified %c:%n $2-
format.add WHOIS_IDLE %c[**]%n idle       %c:%n $tdiff($3)
format.add WHOIS_NAME %c[**]%n ircname    %c:%n $6-
format.add WHOIS_NICK %c[**]%n $2 %c\(%n$3@$4%c\)%n
format.add WHOIS_OPER %c[**]%n operator   %c:%n $2 is an IRC Operator
format.add WHOIS_SERVER %c[**]%n server     %c:%n $3 \($4-\)
format.add WHOIS_SIGNON %c[**]%n signon     %c:%n $strftime($4 %%a %%b %%T %%Z %%Y)
format.add WHOWAS_NAME %c[**]%n ircname    %c:%n $6-
format.add WHOWAS_NICK %c[**]%n $2 was %c\(%n$3@$4%c\)%n
format.add UMODE $G Mode change \"$3-\" for user $2 by $1


alias disco disconnect
alias m msg
alias q query
alias ww whowas


alias chat (nick, void)
{
	if (!nick)
	{
		xecho -b Usage: /chat <nick>
		return
	}

	//dcc chat $nick
}

alias colors (void)
{
	xecho -b Ctrl-C color codes:
	echo 0\0 1\1 2\2 3\3 4\4 5\5 6\6 7\7 8\8 9\9 10\10 11\11 12\12 13\13 14\14 15\15 16\16
}

alias dns (nicks)
{
	if (!nicks)
	{
		xecho -b Usage: /dns <nick> [nick2] [nick3] ...
		return
	}

	for nick in ($nicks)
	{
		^local address

		if (is_on($nick))
		{
			@ address = after(-1 @ $userhost($nick))
		}{
			xecho -b User $nick is not online
		}
		
		xecho -b $nick!$userhost($nick) is ${convert($address) ? convert($address) : [unknown]}
	}
}

alias nslookup (address, void)
{
	if (!address)
	{
		xecho -b Usage: /nslookup <address>
		return
	}

	@ :tmp = convert($address)
	xecho -b $address is ${tmp ? tmp : [unknown]}
}

alias pingme (void)
{
	//ping $servernick()
}

alias umode (mode)
{
	//mode $servernick() $mode
}

alias ver (nick default "$servernick()", void)
{
	ctcp $nick version
}

alias whois (args)
{
	@ :item = matchitem(away_users $word(0 $args)*)
	if (item > -1)
	{
		@ delitem(away_users $item)
	}

	//whois $args
}

alias wi (nick default "$servernick()", void)
{
	whois $nick
}

alias wii (nick default "$servernick()", void)
{
	whois $nick $nick
}


/*
 * WHOIS/WHOWAS related hooks.
 */
on #-timer 424 "*"
{
	^local delete

	for cnt from 0 to ${numitems(away_users) - 1}
	{
		@ :ts = word(1 $getitem(away_users $cnt))
		if ((time() - ts) > CONFIG[SHOW_AWAY_ONCE_TIMEOUT])
		{
			@ push(delete $cnt)
		}
	}

	for item in ($reverse($delete))
	{
		@ delitem(away_users $item)
	}
}

on ^301 "*"
{
	if (FORMAT[WHOIS_AWAY])
	{
		if (CONFIG[SHOW_AWAY_ONCE])
		{
			if (matchitem(away_users $0*) == -1)
			{
				echo $fparse(WHOIS_AWAY $*)
				@ setitem(away_users $numitems(away_users) $0 $time())
			}
		}{
			echo $fparse(WHOIS_AWAY $*)
		}
	}
}

on ^310 "*" #

on ^311 "*"
{
	if (FORMAT[WHOIS_HEADER])
	{
		echo $fparse(WHOIS_HEADER)
	}
	if (FORMAT[WHOIS_NICK])
	{
		echo $fparse(WHOIS_NICK $*)
	}
	if (FORMAT[WHOIS_NAME])
	{
		echo $fparse(WHOIS_NAME $*)
	}
}

on ^312 "*"
{
	if (FORMAT[WHOIS_SERVER])
	{
		echo $fparse(WHOIS_SERVER $*)
	}
}

on ^313 "*"
{
	if (FORMAT[WHOIS_OPER])
	{
		echo $fparse(WHOIS_OPER $*)
	}
}

on ^314 "*"
{
      if (FORMAT[WHOIS_HEADER])
      {
            echo $fparse(WHOIS_HEADER)
      }
	if (FORMAT[WHOWAS_NICK])
	{
		echo $fparse(WHOWAS_NICK $*)
	}
	if (FORMAT[WHOWAS_NAME])
	{
		echo $fparse(WHOWAS_NAME $*)
	}
}

on ^317 "*"
{
	if (FORMAT[WHOIS_IDLE])
	{
		echo $fparse(WHOIS_IDLE $*)
	}
	if (FORMAT[WHOIS_SIGNON])
	{
		echo $fparse(WHOIS_SIGNON $*)
	}
}

on ^318 "*"
{
	if (FORMAT[WHOIS_FOOTER])
	{
		echo $fparse(WHOIS_FOOTER $*)
	}
}

on ^319 "*"
{
	if (FORMAT[WHOIS_CHANNELS])
	{
		echo $fparse(WHOIS_CHANNELS $*)
	}
}

on ^320 "*"
{
	if (FORMAT[WHOIS_IDENTIFIED])
	{
		echo $fparse(WHOIS_IDENTIFIED $*)
	}
}

on ^369 "*"
{
	if (FORMAT[WHOIS_FOOTER])
	{
		echo $fparse(WHOIS_FOOTER $*)
	}
}

/*
 * Default user modes
 */
on #^connect 424 "*" //mode $servernick() $CONFIG.DEFAULT_UMODES

/*
 * Other /FSET related hooks
 */
on ^action '% $servernick() *'
{
	if (FORMAT[ACTION_USER])
	{
		echo $fparse(ACTION_USER $*)
	}
}

on ^ctcp "*"
{
	if (FORMAT[CTCP])
	{
		echo $fparse(CTCP $*)
	}
}

on ^ctcp_reply "*"
{
	if (FORMAT[CTCP_REPLY])
	{
		echo $fparse(CTCP_REPLY $*)
	}
}

on ^dcc_chat "*"
{
	if (FORMAT[DCC_CHAT])
	{
		echo $fparse(DCC_CHAT $*)
	}
}

on ^mode '$servernick() $servernick() *'
{
	if (FORMAT[UMODE])
	{
		echo $fparse(UMODE $*)
	}
}

on ^msg "*"
{
	if (FORMAT[MSG])
	{
		echo $fparse(MSG $0 $userhost() $1-)
	}
}

on ^notice "*"
{
	if (FORMAT[NOTICE])
	{
		echo $fparse(NOTICE $0 $userhost() $1-)
	}
}

on ^send_action "*"
{
	if (FORMAT[SEND_ACTION_USER])
	{
		echo $fparse(SEND_ACTION_USER $*)
	}
}

on ^send_ctcp "PRIVMSG *"
{
	if (FORMAT[SEND_CTCP] && [$2] != [ACTION])
	{
		echo $fparse(SEND_CTCP $*)
	}
}

on ^send_dcc_chat "*"
{
	if (FORMAT[SEND_DCC_CHAT])
	{
		echo $fparse(SEND_DCC_CHAT $*)
	}
}

on ^send_msg "*"
{
	if (FORMAT[SEND_MSG])
	{
		echo $fparse(SEND_MSG $*)
	}
}

on ^send_notice "*"
{
	if (FORMAT[SEND_NOTICE])
	{
		echo $fparse(SEND_NOTICE $*)
	}
}

/* /WHO written by Da5id (thanks) */
on ^who "* % % % % *"
{
	echo $cparse(%c$[10]0%n $[9]1 $[3]2 %W$6%n${([$5]=~[*$after(. $S)*]) ? [%R$[14]after(1 . $5)%n] : [%c$[14]after(1 . $5)%n]} $[-10]3%W@%n$4)
}


/* bmw '01 */