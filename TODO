FOR 0.3 RELEASE:

  * Write a $numlines() function that will return the number of lines
    that a given string will occupy after final display. This must take
    into account the effects of /SET [CONTINUED_LINE|INDENT].

  * Using the above mentioned $numlines() function, rewrite /LESS so that
    it correctly handles linewrapped output.

  * Add timestamping functionality to the core. This includes a TIMESTAMP
    config variable, a format variable of the same name, and a $ts() function
    for use in themes.

  * Write a new_users help page for /DHELP

  * Add support for "paste mode" either as a module or as part of the core.

  * Fix auto-query.

  * Add support for a topic bar.

  * Implement /THEME -save

  * Add an option to /DSET and /FSET to allow them to operate only on a
    specific module.


AFTER 0.3 RELEASE:

  * Write a log management module. It should provide basic log management,   
    such as setting up automatic logging for various things (channels, nicks,
    windows, etc.) as well as log rotation features.

  * [dcc.dsm] Add more DCC related formats.

  * [dcc.dsm] Figure out a good way to suppress the huge warning message
    that is displayed when resuming DCC transfers.

  * [misc.dsm] Add a server ping command (/SPING).

  * [memo.dsm] Add the ability to group memos.

  * [channel.dsm] The REMEMBER_TOPICS feature should also store the nick
    of the person that set the topic as well as the timestamp for it.   

  * Write a userlist module.

  * Use the new dcc_activity hook to write a %D workalike with a configurable
    delay so that it can be used over slower net connections.

  * Add formats for UltimateIRCd's 615 and 616 numerics (WHOIS)
    615 fudd : is using modes +ix +
    616 fudd : real hostname nuthouse.org 216.254.103.18


OTHER NOTES/IDEAS:

* Honor the DISPLAY variable in format related /ON hooks?

* Figure out a way to allow modules to prevent output from /DSET (and /FSET?)
  from within /ON hooks.

* Add a DarkStar echo prefix? e.g. "*** DarkStar: Loaded module: foo 1.0"

* Would some kind of generic caching system be useful? Features like
  REMEMBER_TOPICS could use it instead of each having to handle caching
  things themselves.


End of file.