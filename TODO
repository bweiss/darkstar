FOR 0.3 RELEASE:

  * Move all aliases and assigns in the core scripts to the DS or CORE
    /ASSIGN structures, or a structure prepended with '_', and make sure
    that the module loader does not allow any modules to use names that may
    interfere with the core scripts. This includes the words: ds, core,
    config, format, module, and anything beginning with '_'. Module names
    should also be restricted to only those characters allowed in EPIC
    variable names.

  * Move all the standard formats (whois, joins/parts, msgs, notices, etc.)
    out of their current modules and into a new module named formats.dsm.
    This includes all of names.dsm and large portions of misc.dsm and
    channel.dsm.

  * Merge all the statbar stuff into the theme system and move the entire
    theme system out of the core and into a module named themes.dsm.

  * Allow modules to specify a minimum core ID in their headers. This would
    allow modules that are not compatible with the current version of the
    core scripts to be rejected or simply left out of the available modules
    list. There should probably be a /DSET that allows these to be ignored.

  * Improve dependency support for modules. If a module that another module
    depends on is unloaded we should warn the user and maybe not even allow
    it to be unloaded. At least not without the user's explicit consent.
    Perhaps there should be some kind of "force" flag for /UNLOADMOD.

    Should a module's dependencies be specified in the header, like the
    module version, or should it be left to the existing method (module.dep)?
    We're already going through the trouble of reading the first line of
    each module when building the mod list, so this wouldn't be much extra
    work.

  * Add the option to have the module loader automatically purge non-existent
    modules from the auto-load list. This could take the form of either a
    /DSET option or the user could just be prompted every time.

  * Add 005 handler.

  * I have discovered a way to address several windowing issues including
    $STATUS.DOUBLE/single_status, conflicts between the msg win and operview,
    auto-join, auto-bind, and the automatic creation of windows. Basically,
    I want to write an all-purpose window manager that will allow you to
    not only setup windows with fixed attributes but also be able to save
    and restore them. The oper and window modules would then use this system
    to setup the operview and msg windows instead handling it all themselves.

  * Write a $numlines() function that will return the number of lines
    that a given string will occupy after final display. This must take
    into account the effects of /SET [CONTINUED_LINE|INDENT].

  * Using the above mentioned $numlines() function, rewrite /LESS so that
    it correctly handles linewrapped output.

  * Add timestamping functionality to the core. This includes a TIMESTAMP
    config variable, a format variable of the same name, and a $ts() function
    for use in themes.

  * Rename the bool_to_* functions. $booltoword() and $booltonum()?

  * Change most of the error messages in the core (especially the module
    loader) so that they are less alarming. Messages like "Error: Module
    is already loaded (<modname>)" should become something more like
    "*** Module <modname> is already loaded".

  * Add some global variables to the core that the module loader will set
    to the name of the module currently being (un)loaded.

  * Consider adding some method for modules to add small help strings for
    their aliases. Perhaps a special member for each module's assign structure
    like "<modname>.HELP.<command>[.<linenum>]". The <linenum> member would
    allow for multiple lines of text. Ideally, modules would have a completely
    separate help system, freeing /DHELP to be used exclusively for the core.
    The main benefit of this is that help for modules would be included in
    the module itself allowing all modules to have help pages instead of just
    those that are packaged with the core.


AFTER 0.3 RELEASE:

  * [channel.dsm] Rewrite /WALL so that type 3 attempts to use the 005
    handler's value for MAXTARGETS or fallback to 4, instead of 7, if that
    fails.

  * Write a log management module. It should provide basic log management,   
    such as setting up automatic logging for various things (channels, nicks,
    windows, etc.) as well as log rotation features.

  * [dcc.dsm] Add more DCC related formats.

  * [dcc.dsm] Figure out a good way to suppress the huge warning message
    that is displayed when resuming DCC transfers.

  * [misc.dsm] Add a server ping command (/SPING).

  * [memo.dsm] Add the ability to group memos.

  * [channel.dsm] The REMEMBER_TOPICS feature should also store the nick
    of the person that set the topic as well as the timestamp for it.   

  * Write a userlist module.


OTHER NOTES/IDEAS:

* Honor the DISPLAY variable in format related /ON hooks?

* Figure out a way to allow modules to prevent output from /DSET (and /FSET?)
  from within /ON hooks.

* Add a DarkStar echo prefix? e.g. "*** DarkStar: Loaded module: foo 1.0"


End of file.